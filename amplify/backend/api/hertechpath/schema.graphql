# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

enum Levels {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

type Post @model @auth(rules: [{allow: public, operations: [create, update, delete, read]}]) {
  id: ID!
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  User: [User] @manyToMany(relationName: "PostUser")
  title: String
  description: String
}

type UserPath @model @auth(rules: [{allow: public, operations: [create, update, delete, read]}]) {
  id: ID!
  Users: [User] @manyToMany(relationName: "UserPathUser")
  Paths: [Path] @hasMany(indexName: "byUserPath", fields: ["id"])
  progress: AWSJSON
}

type User @model @auth(rules: [{allow: public, operations: [create, update, delete, read]}]) {
  id: ID!
  userpaths: [UserPath] @manyToMany(relationName: "UserPathUser")
  posts: [Post] @manyToMany(relationName: "PostUser")
  level: Levels
  name: String
  email: AWSEmail
}

type Path @model @auth(rules: [{allow: public, operations: [create, update, delete, read]}]) {
  id: ID!
  name: String!
  userpathID: ID! @index(name: "byUserPath")
  Resources: [Resources] @hasMany(indexName: "byPath", fields: ["id"])
  level: Levels
}

type Comment @model @auth(rules: [{allow: public, operations: [create, update, delete, read]}]) {
  id: ID!
  postID: ID! @index(name: "byPost")
  description: String!
}

type Resources @model @auth(rules: [{allow: public, operations: [create, update, delete, read]}]) {
  id: ID!
  title: String
  description: String
  link: AWSURL
  pathID: ID! @index(name: "byPath")
  Path: Path @belongsTo(fields: ["pathID"])
}
 
